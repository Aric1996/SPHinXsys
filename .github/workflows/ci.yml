name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  VCPKG_VERSION: "69efe9cc2df0015f0bb2d37d55acde4a75c9a25b" # 01/04/2023
  CTEST_PARALLEL_LEVEL: "1"

# A workflow is made up of one or more jobs that can run sequentially or in parallel
jobs:
  ###############################################################################

  Windows:
    runs-on: windows-latest
    env:
      VCPKG_DEFAULT_TRIPLET: x64-windows

    steps:
      - uses: actions/checkout@v3 # Checks-out the repository under ${{github.workspace}}
      
      - name: Update ccache and ninja # For correct caching with ccache on Windows
        shell: bash
        run: |
          choco install ccache
          choco install ninja
          
      - uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ github.job }}

      - name: setup vcpkg (windows)
        uses: lukka/run-vcpkg@v11
        with:
          # hash for tag 2023.04.15 - bugged so use more recent
          # https://github.com/microsoft/vcpkg/pull/29067
          vcpkgGitCommitId: "1c5a340f6e10985e2d92af174a68dbd15c1fa4e1"

      - name: Install dependencies
        run: |
          ${{github.workspace}}\vcpkg\vcpkg.exe install --clean-after-build `
            eigen3 `
            tbb `
            boost-program-options `
            boost-geometry `
            simbody `
            gtest `
            xsimd `
            pybind11

      - uses: ilammy/msvc-dev-cmd@v1

      - name: Generate buildsystem
        run: |
          cmake.exe -G Ninja `
            -D CMAKE_BUILD_TYPE=Release `
            -D CMAKE_TOOLCHAIN_FILE="${{github.workspace}}\vcpkg\scripts\buildsystems\vcpkg.cmake" `
            -D CMAKE_C_COMPILER_LAUNCHER=ccache -D CMAKE_CXX_COMPILER_LAUNCHER=ccache `
            -D SPHINXSYS_CI=ON `
            -S ${{github.workspace}} `
            -B C:\build
      
      - name: Build
        run: cmake.exe --build C:\build --config Release --verbose

      - name: Test with the first try
        id: first-try
        run: |
          cd C:\build 
          ctest.exe --output-on-failure
        continue-on-error: true

      - name: Test with the second try for failed cases
        id: second-try
        if: ${{ steps.first-try.outcome == 'failure' }} 
        run: |
          cd C:\build 
          ctest.exe --rerun-failed --output-on-failure
        continue-on-error: true

      - name: Test with the third try for failed cases
        id: third-try
        if: ${{ steps.second-try.outcome == 'failure' }} 
        run: |
          cd C:\build 
          ctest.exe --rerun-failed --output-on-failure
        continue-on-error: true

      - name: Test with the fourth try for failed cases
        id: fourth-try
        if: ${{ steps.third-try.outcome == 'failure' }} 
        run: |
          cd C:\build 
          ctest.exe --rerun-failed --output-on-failure
        continue-on-error: true

      - name: Test with the last try for failed cases
        if: ${{ steps.fourth-try.outcome == 'failure' }} 
        run: |
          cd C:\build 
          ctest.exe --rerun-failed --output-on-failure

  ###############################################################################